// Code generated by mockery v2.0.4. DO NOT EDIT.

package mocks

import (
	context "context"

	entities "github.com/manabie-com/togo/internal/domains/entities"
	mock "github.com/stretchr/testify/mock"

	sql "database/sql"
)

// ITask is an autogenerated mock type for the ITask type
type ITask struct {
	mock.Mock
}

// AddTask provides a mock function with given fields: ctx, t
func (_m *ITask) AddTask(ctx context.Context, t *entities.Task) error {
	ret := _m.Called(ctx, t)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *entities.Task) error); ok {
		r0 = rf(ctx, t)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RetrieveTasks provides a mock function with given fields: ctx, userID, createdDate
func (_m *ITask) RetrieveTasks(ctx context.Context, userID sql.NullString, createdDate sql.NullString) ([]*entities.Task, error) {
	ret := _m.Called(ctx, userID, createdDate)

	var r0 []*entities.Task
	if rf, ok := ret.Get(0).(func(context.Context, sql.NullString, sql.NullString) []*entities.Task); ok {
		r0 = rf(ctx, userID, createdDate)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*entities.Task)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, sql.NullString, sql.NullString) error); ok {
		r1 = rf(ctx, userID, createdDate)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
